name: Build and Publish Package

on:
  push:
    branches: [ "master" ]

jobs:
  build-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Установка Python и зависимостей
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      # Сборка пакета (без Docker)
      - name: Build package
        run: python -m build

      # Исправленная версия upload-artifact
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

      # Публикация в TestPyPI
      - name: Publish to TestPyPI
        run: |
          echo "TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}"
          ls -la dist/  # Проверка наличия файлов
          twine upload --repository testpypi dist/* --verbose
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}

      # Очистка Docker (если всё же нужен Docker)
      - name: Cleanup Docker
        if: always()
        run: |
          docker rm -f pydb || true
          docker rmi pydb || true